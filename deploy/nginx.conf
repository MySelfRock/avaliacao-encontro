# Configuração Nginx para Avaliação do Encontro de Noivos
# Copiar para: /etc/nginx/sites-available/avaliacao-encontro
# Link simbólico: sudo ln -s /etc/nginx/sites-available/avaliacao-encontro /etc/nginx/sites-enabled/

server {
    listen 80;
    listen [::]:80;

    # Substitua pelo seu domínio ou IP do servidor
    server_name seu-dominio.com.br www.seu-dominio.com.br;
    # Para usar apenas IP: server_name 192.168.1.100;

    # Logs
    access_log /var/log/nginx/avaliacao-encontro-access.log;
    error_log /var/log/nginx/avaliacao-encontro-error.log;

    # Aumentar limite de upload (para avaliações com muito texto)
    client_max_body_size 10M;

    # Proxy para API do Node.js
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;

        # Headers importantes para proxy
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Não fazer cache de respostas da API
        proxy_cache_bypass $http_upgrade;
    }

    # Arquivos estáticos do frontend
    location / {
        # Caminho para os arquivos buildados (ajuste conforme necessário)
        root /var/www/avaliacao-encontro/dist;

        # Tentar servir arquivo, senão pasta, senão index.html (SPA fallback)
        try_files $uri $uri/ /index.html;

        # Cache para assets estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Não fazer cache do index.html
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            expires 0;
        }
    }

    # Segurança: bloquear acesso a arquivos sensíveis
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Comprimir respostas
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}

# Configuração SSL (descomente após configurar certificado)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name seu-dominio.com.br www.seu-dominio.com.br;
#
#     # Certificados SSL (Let's Encrypt ou outro)
#     ssl_certificate /etc/letsencrypt/live/seu-dominio.com.br/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/seu-dominio.com.br/privkey.pem;
#
#     # Configurações SSL modernas
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     # ... resto da configuração igual ao server HTTP acima ...
# }

# Redirecionar HTTP para HTTPS (descomente após configurar SSL)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name seu-dominio.com.br www.seu-dominio.com.br;
#     return 301 https://$server_name$request_uri;
# }
